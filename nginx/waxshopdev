map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    ~application/	       max;
    ~image/                    max;
}

server {
	server_name dev.waxshop.ca;
	server_tokens off;

	# root /var/www/waxshopdev;
	# index index.html;
	gzip on;
	gzip_types text/css application/javascript ~image/;

	location /hours {
		add_header 'Access-Control-Allow-Origin' '*';
		proxy_set_header 'Authorization' '';
		proxy_pass https://maps.googleapis.com/maps/api/place/details/json?key=AIzaSyDxzGphN7Omp11K2vDulJF8TBh7vCR6ddQ&place_id=ChIJX33ybTGLfVMRLC4l1HzHwEc&fields=opening_hours;
	}
	location /webhooks/ {
		proxy_pass http://127.0.0.1:7777/;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
	location /api/ {
		proxy_pass http://127.0.0.1:8080/;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
	location / {
		# try_files $uri $uri/ =404;
		expires $expires;
		proxy_redirect                      off;
		proxy_set_header Host               $host;
		proxy_set_header X-Real-IP          $remote_addr;
		proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto  $scheme;
		proxy_read_timeout          1m;
		proxy_connect_timeout       1m;
		proxy_pass                          http://127.0.0.1:3333; # set the adress of the Node.js instance here

	}



    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dev.waxshop.ca/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dev.waxshop.ca/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
        if ($host = dev.waxshop.ca) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

	listen 80;
	listen [::]:80;
	server_name dev.waxshop.ca;

